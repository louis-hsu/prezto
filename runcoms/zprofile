#
# Executes commands at login pre-zshrc.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# ------------------------ Script

# ------------------------ Browser
if [[ -z "$BROWSER" && "$OSTYPE" == darwin* ]]; then
  export BROWSER='open'
fi

# ------------------------ Editors
if [[ -z "$EDITOR" ]]; then
  export EDITOR='nvim'
fi
if [[ -z "$VISUAL" ]]; then
  export VISUAL='nvim'
fi
if [[ -z "$PAGER" ]]; then
  export PAGER='less'
fi

# ------------------------ Language
if [[ -z "$LANG" ]]; then
  export LANG='en_US.UTF-8'
fi

# ------------------------ Android
export ANDROID_HOME=$HOME/Library/Android/sdk
export ANDROID_USER_HOME=$HOME/.dotfiles/dot-android

# ------------------------ Path
# New brew configuration -- Louis 2021/1226
eval "$(/opt/homebrew/bin/brew shellenv)"

# Ensure path arrays do not contain duplicates.
typeset -gU cdpath fpath mailpath path

# Set the list of directories that cd searches.
# cdpath=(
#   $cdpath
# )

# Set the list of directories that Zsh searches for programs.
path=(
  $HOME/.{,s}bin(N)                               # My utility tools -- Louis 2022/1011
  $HOME/.cargo/bin                                # Moved from zshenv -- Louis 2023-06-05 14:19
  $HOME/.docker/bin                               # Docker CLI folder -- Louis 2023/0620
  $ANDROID_HOME/tools                	            # Android SDK path -- Louis 2011/0420
  $ANDROID_HOME/platform-tools
  $HOMEBREW_PREFIX/opt/ruby/bin
  $HOMEBREW_PREFIX/opt/coreutils/libexec/gnubin   # Install brew-version coreutilis -- Louis 2015/0209
  $HOMEBREW_PREFIX/opt/gnu-getopt/bin             # Install gnu getopt -- Louis 2020/1112
  $HOMEBREW_PREFIX/opt/sqlite/bin                 # Update brew sqlite location
  $HOMEBREW_PREFIX/opt/grep/libexec/gnubin        # Install brew-version grep  -- Louis 2021/0119
  $HOMEBREW_PREFIX/opt/gnu-time/libexec/gnubin    # Install gnu version time -- Louis 2021/0530
  $HOMEBREW_PREFIX/opt/gnu-sed/libexec/gnubin     # Install gnu version sed -- Louis 2024/0307
  $HOMEBREW_PREFIX/opt/ncurses/bin                # Install gnu version text-based UI library -- Louis 2024/1119
  /opt/{homebrew,local}/{,s}bin(N)
  $HOME/.dotfiles/dot-local/bin                   #Created by `pipx` on 2024-11-01 07:30:06
  /usr/local/{,s}bin(N)
  $path
)

# ------------------------ Less
# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X to enable it.
if [[ -z "$LESS" ]]; then
  export LESS='-F -g -i -M -R -j4 -w -X -z-4'
fi

# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
if [[ -z "$LESSOPEN" ]] && (( $#commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
fi

# ------------------------ Colors
# Use 'vivid' to generate customized LS-COLORS and filetype
# -- Louis 2023-06-09 16:36
export LS_COLORS="$(vivid generate ~/.config/vivid/catppuccin-flatwhite)"

# Tell 'eza' to use LS_COLORS via 'reset' command and specify exa specific extra coloring
# Reference:
# https://the.exa.website/docs/colour-themes
# https://www.ditig.com/publications/256-colors-cheat-sheet (256 color)
GREY_COLOR="38;5;248"
GREY_COLOR_2="38;5;240"
GREY_COLOR_3="38;5;243"
export EXA_COLORS="uu=${GREY_COLOR_3}:\
un=${GREY_COLOR_3}:\
gu=${GREY_COLOR_3}:\
gn=${GREY_COLOR_3}:\
ur=33:\
uw=31:\
ue=32:\
ux=32:\
da=${GREY_COLOR_3}"

# Configure grep color -- Louis 2021/0119
export GREP_COLORS='mt=38;5;232;48;2;136;192;208:ln=01;38;5;222'

# ------------------------ Fzf
# FZF_COLORS="fg:#D8DEE9,\
# fg+:#D8DEE9,\
# bg+:#434C5E,\
# hl:#A3BE8C,\
# hl+:#A3BE8C,\
# pointer:#BF616A,\
# info:#4C566A,\
# spinner:#4C566A,\
# header:#4C566A,\
# prompt:#81A1C1,\
# marker:#EBCB8B"
#
# Catppuccin Mocha colortheme
FZF_COLORS="fg:#cdd6f4,\
fg+:#cdd6f4,\
bg+:#313244,\
hl:#f38ba8,\
hl+:#f38ba8,\
pointer:#f5e0dc,\
info:#cba6f7,\
spinner:#f5e0dc,\
header:#f38ba8,\
prompt:#cba6f7,\
marker:#b4befe,\
selected-bg:#45475a" 

export FZF_DEFAULT_OPTS="--no-mouse\
 --height 80%\
 --reverse\
 --color $FZF_COLORS\
 --multi\
 --border\
 --info=inline"

export FZF_CTRL_T_COMMAND="fd -t f -H -L"
export FZF_CTRL_T_OPTS="--preview 'bat -f {}'\
 --bind='ctrl-l:preview-page-up,ctrl-h:preview-page-down'"

export FZF_ALT_C_COMMAND="fd -t d -H -L"
export FZF_ALT_C_OPTS="--preview 'eza -aF\
 --group-directories-first\
 --color=always\
 --ignore-glob=\"Icon?|.DS_Store|.git\" -T -L 2 {}'\
 --bind 'ctrl-l:preview-page-up,ctrl-h:preview-page-down'"

export FZF_CTRL_R_OPTS="--reverse"

export FZF_TMUX_OPTS="-p -w 85% -h 80%"

# ------------------------ Bat (better cat)
# Use 'bat' to better colorize manpage -- Louis 2023-04-11 15:08
export MANPAGER="sh -c 'col -bx | bat -l man -p --theme=\"Monokai Extended\"'"
export MANROFFOPT="-c"

# ------------------------ Delta
# Add for 'core.pager' setup in 'git/config' -- Louis 2024/0424
export DELTA_FEATURES='nshiu_nordbase zebra-dark'

# ------------------------ Ripgrep (better grep)
export RIPGREP_CONFIG_PATH="${XDG_CONFIG_HOME}/ripgrep/ripgreprc"

# ------------------------ Virtualenv
export VIRTUALENVWRAPPER_PYTHON=$(which python3)
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Development/PythonDev
export VIRTUALENVWRAPPER_WORKON_CD=1

# ------------------------ Others
# Remove jenv setup since I might not really need multiple Java version
# Instead set JAVA_HOME directly, keep jenv binary though -- Louis 2021/0416
#export PATH=/usr/local/opt/openjdk/bin:${PATH}
#export JAVA_HOME=`/usr/libexec/java_home`

# Setup gem home/binary path -- Louis 2018/1220
export GEM_HOME=~/.gem

# Set turecolor terminal
export COLORTERM=truecolor

# ------------------------ Obsolete
# rationalize-path()
# Later we'll need to trim down the paths that follow because the ones
# given here are for all my accounts, some of which have unusual
# paths in them.  rationalize-path will remove
# nonexistent directories from an array.
#
# To be honest, I don't know what exactly it does, but it works -- Louis 2021/0526
#rationalize-path () {
#    # Note that this works only on arrays, not colon-delimited strings.
#    # Not that this is a problem now that there is typeset -T.
#    local element
#    local build
#    build=()
#    # Evil quoting to survive an eval and to make sure that
#    # this works even with variables containing IFS characters, if I'm
#    # crazy enough to setopt shwordsplit.
#    eval '
#    foreach element in "$'"$1"'[@]"
#    do
#        if [[ -d "$element" ]]
#        then
#            build=("$build[@]" "$element")
#        fi
#    done
#    '"$1"'=( "$build[@]" )
#    '
#}
